apiVersion: v1apiVersion: v1apiVersionapiVersion: v1

kind: ServiceAccount

metadata:kind: ServiceAccountkind: ServiceAccount

  name: media-access-sa

  namespace: blogmetadata:metadata:

  labels:

    app: blog-backend  name: media-access-sa  name: media-access-sa

    component: media-access

automountServiceAccountToken: true  namespace: blog  namespace: blog

---

# Token secret for the service account (required for K3s OIDC)  labels:  # Remove EKS annotation - we're using K3s OIDC, not EKS IRSA

apiVersion: v1

kind: Secret    app: blog-backend  # annotations:

metadata:

  name: media-access-sa-token    component: media-access  #   eks.amazonaws.com/role-arn: arn:aws:iam::007041844937:role/BedtimeBlogMediaRole

  namespace: blog

  annotations:automountServiceAccountToken: true---

    kubernetes.io/service-account.name: media-access-sa

type: kubernetes.io/service-account-token---# Token secret for the service account (required for K3s OIDC)

# Token secret for the service account (required for K3s OIDC)apiVersion: v1

apiVersion: v1kind: Secret

kind: Secretmetadata:

metadata:  name: media-access-sa-token

  name: media-access-sa-token  namespace: blog

  namespace: blog  annotations:

  annotations:    kubernetes.io/service-account.name: media-access-sa

    kubernetes.io/service-account.name: media-access-satype: kubernetes.io/service-account-tokend: ServiceAccount

type: kubernetes.io/service-account-tokenmetadata:
  name: media-access-sa
  namespace: blog
  labels:
    app: blog-backend
    component: media-access
automountServiceAccountToken: true
---
apiVersion: v1
kind: Secret
metadata:
  name: media-access-token
  namespace: blog
  annotations:
    kubernetes.io/service-account.name: media-access-sa
type: kubernetes.io/service-account-token